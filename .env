SECRET=this<ismy>littlesecret.
API_KEY=sshjwknbdyejrjheebeenekh2gw
CLIENT_ID=346669742057-c5a3oohfhedb56dfjt7jvufl5ab8u09f.apps.googleusercontent.com
CLIENT_SECRET=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

# // const bcrypt = require("bcrypt");
# // const saltRounds = 10;
# // const encrypt = require('mongoose-encryption');
# // const md5 = require("md5");

# // app.get("/secrets", function(req, res) {
# //     User.find({ "secret": { $ne: null } })
# //       .then((foundUsers) => {
# //         if (foundUsers) { // Check if any users with secrets were found
# //           res.render("secrets", { usersWithSecrets: foundUsers });
# //         } else {
# //           // Handle the case where no users with secrets were found
# //           res.render("secrets", { usersWithSecrets: [] }); // You can also pass an empty array
# //         }
# //       })
# //       .catch((err) => {
# //         console.log(err); // Handle any errors that occur during the database query
# //       });
# //   });


    # // bcrypt.hash(req.body.password, saltRounds, function(err, hash) {
 
    # // const newUser = new User ({

    # //     email: req.body.username,
    # //     password: hash
    # // });

    # // newUser.save()
    # // .then(savedUser => {
    # //     res.render("secrets", savedUser);
    # // })
    # // .catch(error => {
    # //     console.error("error saving user:", error);
    # // }); 
    # // });

#     //    const username = req.body.username;
# //    const password = req.body.password;

# //    User.findOne({email: username})
# //    .then(foundUser => {

# //     if(foundUser){
           
# //         bcrypt.compare(password, foundUser.password, function(err, result) {
# //              if (result === true) {

# //                 res.render("secrets");
# //              }
# //         });
                
            
        
# //     } else {
# //         if(err){
# //         console.log(err);
# //     }
# // } 
# //    })
# //    .catch(error => {
# //     console.error(error);
# //    });